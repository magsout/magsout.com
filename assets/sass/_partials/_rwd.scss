/**
* Responsive classes
*
* @author splitfire - http://splitfire.fr
* @version 1.0
*
*/ 


/** 
 *	Configuration module JS via media-queries
 *	idea: http://css-tricks.com/making-sass-talk-to-javascript-with-json/
 */
 
body:after
{
	display: none;
}    


//Configuration list

$mapKey-breakpoints  	: map-keys($mq-configs);
$first-breakpoints		: first($mapKey-breakpoints);
$last-breakpoints		: last($mapKey-breakpoints);

@each $mq-breakpoint, $config in $mq-configs 
{	
	
	@if( ($mq-breakpoint != $first-breakpoints) and ($mq-breakpoint != $last-breakpoints))
	{	
		$previousDevice 	: nth($mapKey-breakpoints, (index($mapKey-breakpoints,$mq-breakpoint) - 1)) ;	
		@include mq(#{$previousDevice}, #{$mq-breakpoint}) 
		{
			bodys:after
			{
				content: $config;
			}
		}			
	}
	@else if ($mq-breakpoint == $first-breakpoints)
	{
		@include mq($to :#{$mq-breakpoint}) 
		{
			bodys:after
			{
				content: $config;
			}
		}
	}
	@else if ($mq-breakpoint == $last-breakpoints)
	{
		@include mq($from : #{$mq-breakpoint}) 
		{
			bodys:after
			{
				content: $config;
			}
		}
	}
}
	
@include mq ($to : phablet)
{
	body:after
	{
		content: $configPhoneJS;
	}	
}
@include mq (phablet, tablet)
{
	body:after
	{
		content: $configPhabletJS;
	}	
}
@include mq ( tablet , desktop)
{
	body:after
	{
		content: $configTabletJS;
	}
}
@include mq (desktop, wide)
{
	body:after
	{
		content: $configDesktopJS;
	}
}
@include mq ($from : wide)
{
	body:after
	{
		content: $configWideJS;
	}
}




/**
 *
 * Viewport
 *
 **/
 
@-webkit-viewport 
{
  width: device-width;
  zoom: 1.0;
}
@-moz-viewport 
{
  width: device-width;
  zoom: 1.0;
}
@-ms-viewport 
{
  width: device-width;
  zoom: 1.0;
}
@-o-viewport 
{
  width: device-width;
  zoom: 1.0;
}
@viewport 
{
  width: device-width;
  zoom: 1.0;
}

/* mq phone
------------------*/
@include mq($to: phablet) 
{
	.wrapper__viewport
	{
	    .hidden-on-phone,
	    .visible-only-full,
	    .visible-only-tablet 
	    {
	        display: none;
	    }
	}
}

 






